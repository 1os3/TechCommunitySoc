version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: techcommunity-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: forum_db
      POSTGRES_USER: forum_user
      POSTGRES_PASSWORD: A2EoJXCeCMBDG2+Fo01LS8ClbVbQ+mv7bsNFwM0LeTM=
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - techcommunity-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U forum_user -d forum_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: techcommunity-app
    restart: unless-stopped
    ports:
      - "80:80"  # Combined frontend (user + admin paths)
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: forum_db
      DB_USER: forum_user
      DB_PASSWORD: A2EoJXCeCMBDG2+Fo01LS8ClbVbQ+mv7bsNFwM0LeTM=
      JWT_SECRET: Wkr0C6NXF/f49vPNPPPG3TD1Q+6UgFEmG74x+tgYxkfBeBe5XvTrEOctrH5T5HbI
      JWT_EXPIRES_IN: 24h
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      HOT_POSTS_LIMIT: 20
      RECOMMENDATION_LIMIT: 10
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - techcommunity-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  techcommunity-network:
    driver: bridge